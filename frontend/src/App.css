.App {
  text-align: center;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.App-header {
  background-color: #282c34;
  display: flex;
  flex-direction: row; 
  align-items: center; 
  justify-content: space-between; 
  font-size: calc(10px + 2vmin);
  color: white;
  padding: 10px 20px; 
}

#app-logo {
  max-height: 50px; 
  width: auto;
  flex-shrink: 0; /* Prevent logo from shrinking */
}

.header-title-text {
  flex-grow: 1; /* Allows this to take up space */
  text-align: center; /* Centers the <p> tag within it */
  margin: 0 15px; /* Add some horizontal margin */
  font-size: 0.8em; /* Slightly smaller text for the title/status */
  white-space: nowrap; /* Prevent wrapping if possible */
  overflow: hidden;
  text-overflow: ellipsis;
}

.header-title-text p {
   display: inline-block; 
   margin: 0; /* Reset paragraph margin */
}

.header-login-control {
  flex-shrink: 0; /* Prevent login icon from shrinking */
}

.login-icon-button, .logout-icon-button {
  background: none;
  border: 1px solid black; /* Flat border */
  cursor: pointer;
  padding: 4px; /* Adjust padding around the image */
  margin-left: 15px;
  display: inline-flex; /* Helps align image if needed */
  align-items: center;
  justify-content: center;
  /* Remove text-specific properties */
  /* color: black; */
  /* font-size: 0.9em; */
  /* line-height: 1; */
}

.login-icon-button img, .logout-icon-button img {
  width: 16px; /* Desired icon size */
  height: 16px; /* Desired icon size */
  display: block; /* Remove extra space below image */
}

.login-icon-button:hover, .logout-icon-button:hover {
  background-color: #f0f0f0; /* Slight background change on hover */
  /* color: #333; */ /* Not needed for img unless SVG with currentColor */
}


main {
  padding: 20px;
  flex-grow: 1; /* Allows main to take up available space */
  max-width: 1200px; /* Max width for content area */
  width: 100%;
  margin: 0 auto; /* Center content */
  box-sizing: border-box;
}

form {
  margin-bottom: 20px;
  display: flex; /* For aligning input and send button */
  align-items: center; /* Vertically align items */
}

input[type="text"] {
  padding: 10px;
  /* margin-right: 10px; */ /* Will be handled by send-button margin */
  border: 1px solid #ccc;
  border-radius: 4px;
  /* width: 70%; */ /* Let flexbox handle width */
  flex-grow: 1; 
  /* max-width: 400px; */ /* Removing max-width to allow it to match select if select grows larger */
  box-sizing: border-box;
  height: 40px; /* Explicit height for alignment */
}

/* General button styles - apply to login button, others will override */
button {
  padding: 10px 15px;
  background-color: #61dafb;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1em;
  height: 40px; /* Explicit height for alignment */
  box-sizing: border-box;
}

button:hover {
  background-color: #21a1f1;
}

button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

/* Specific styles for icon buttons to override general button styles */
.refresh-button, .send-button {
  background: none;
  border: none;
  color: #282c34; /* Default icon color */
  padding: 0 8px; /* Minimal horizontal padding */
  margin-left: 8px;
  font-size: 1.5em; /* Adjust icon size */
  line-height: 1; /* Helps with vertical alignment of icon character */
  height: 40px; /* Match input/select height */
  display: flex;
  align-items: center;
  justify-content: center;
}

.refresh-button:hover, .send-button:hover {
  background: none;
  color: #61dafb; /* Icon color change on hover */
}

.refresh-button:disabled, .send-button:disabled {
  background: none;
  color: #ccc;
}

/* Ensure the send button icon is a bit larger if desired */
.send-button {
  font-size: 1.8em;
}


ul {
  list-style-type: none;
  padding: 0;
}

/* Styles for .video-list and .video-list-item from App.js */
.video-list-item {
  background-color: #f9f9f9;
  border: 1px solid #eee;
  padding: 15px; /* Increased padding */
  margin-bottom: 15px; /* Increased margin */
  border-radius: 4px;
  text-align: left;
  display: flex; /* Use flexbox for layout */
  flex-direction: row; /* Default: image on left, text on right */
  align-items: flex-start; /* Align items to the top */
}

.video-list-item img {
  width: 120px;
  height: 90px;
  margin-right: 15px; /* Increased margin */
  object-fit: cover; /* Ensure image covers the area without distortion */
  flex-shrink: 0; /* Prevent image from shrinking */
}

.video-list-item div { /* Text content container */
  flex-grow: 1; /* Allow text content to take remaining space */
}

.video-list-item h4 {
  margin-top: 0;
  margin-bottom: 8px; /* Added margin */
}

.video-list-item p {
  margin-top: 4px; /* Added margin */
  margin-bottom: 4px; /* Added margin */
  font-size: 0.9em; /* Slightly smaller paragraph text */
}

.video-description {
  white-space: pre-wrap; /* Preserve whitespace and newlines */
}

/* Playlist Selector Div adjustments - Apply to all screen sizes */
main > div:first-child { /* This is the playlist selector container */
  display: flex;
  flex-direction: row; 
  align-items: center; 
  justify-content: flex-start; 
  margin-bottom: 20px; 
  flex-wrap: nowrap; /* Ensure no wrapping */
}

main > div:first-child label {
  margin-right: 10px; 
  white-space: nowrap;
  flex-shrink: 0; /* Prevent label from shrinking */
}

main > div:first-child select {
  font-size: 1em; 
  border: 1px solid #ccc;
  border-radius: 4px;
  flex-grow: 1; /* Allow select to take up space */
  flex-shrink: 1; /* Allow select to shrink if needed */
  min-width: 150px; 
  height: 40px; 
  box-sizing: border-box;
  margin-right: 0; /* Button will have margin-left */
}

/* .refresh-button styles are defined globally, ensure it doesn't shrink */
.refresh-button {
  flex-shrink: 0; /* Prevent button from shrinking */
}

/* Media Queries for Responsiveness */
@media (max-width: 768px) {
  .App-header {
    font-size: calc(12px + 2vmin); /* Adjust font size */
  }
  
  /* Specific adjustments for playlist selector on smaller screens, if any, can go here. */
  /* For now, the default row behavior is desired across all sizes. */
  /* If select needs to be even smaller on very small screens: */
  /* main > div:first-child select { min-width: 120px; } */


  /* Chat form styling */
  /* The global 'form' style `display: flex; align-items: center;` handles the row layout and vertical alignment. */
  /* `input[type="text"]` has `flex-grow: 1` and `height: 40px`. */
  /* `.send-button` has `height: 40px`. */
  /* This should make the chat input and send button vertically aligned and same height. */
  /* To make chat input and playlist select the same width, we can give them a shared class or rely on flex behavior. */
  /* For now, let's ensure their container (main > div:first-child for select, and form for input) are structured well. */
  /* The select has min-width: 200px and flex-grow:1. The input has flex-grow:1. */
  /* If they are in different flex containers that don't align, their widths might differ. */
  /* Let's try to give them a similar max-width for consistency on larger screens if they are not in the same direct layout parent */
  main > div:first-child select, 
  form input[type="text"] { /* Targeting both select and chat input */
    /* max-width: 450px; */ /* Example shared max-width, adjust as needed */
    /* This might be better handled by a shared parent container for these two rows */
  }


  /* Responsive adjustments for the form specifically */
  /* The general form stacking for 768px might be too aggressive now */
  /* Let's ensure the chat form stays row-oriented unless very small */
  
  /* Keep input[type="text"] and form button (general) stacking for other forms if any */
  /* but for the chat form specifically, we want it to be a row */
  /* The form element itself already has display:flex and align-items:center from above */
  /* We just need to ensure its children (input and .send-button) behave */

  /* The media query for form stacking at 768px: */
  /* form {
    display: flex;
    flex-direction: column; 
    align-items: stretch; 
  }
  form button {
    width: 100%; 
  }
  input[type="text"] {
    width: 100%; 
    margin-right: 0;
    margin-bottom: 10px; 
  } */
  /* The above general form stacking might conflict. Let's assume ChatInterface's form is the primary one we care about for this row style. */
  /* If other forms exist and need stacking, they'd need specific classes or more specific selectors. */
  /* For now, the global `form { display: flex; align-items: center; }` will keep the chat input and send button in a row. */
  /* The `input[type="text"]` width will be controlled by `flex-grow: 1` */


  .video-list-item {
    flex-direction: column; /* Stack image and text content */
    align-items: center; /* Center items when stacked */
    text-align: center; /* Center text when stacked */
  }

  .video-list-item img {
    margin-right: 0;
    margin-bottom: 10px; /* Space between image and text */
    width: 80%; /* Larger image when stacked */
    max-width: 240px; /* Max width for stacked image */
    height: auto; /* Maintain aspect ratio */
  }
   .video-list-item div {
    width: 100%; /* Ensure text div takes full width */
  }
}

@media (max-width: 480px) {
  main {
    padding: 10px; /* Reduce padding on very small screens */
  }
  
  .video-list-item {
    padding: 10px;
  }

  .video-list-item h4 {
    font-size: 1.1em; /* Adjust heading size */
  }
   .video-list-item p {
    font-size: 0.85em; /* Adjust paragraph text size */
  }
}

/* Loading Overlay Styles */
.loading-overlay {
  position: fixed; /* Cover the whole screen */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 1000; /* Ensure it's on top */
  color: white;
}

.spinner {
  border: 8px solid #f3f3f3; /* Light grey */
  border-top: 8px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 1s linear infinite;
  margin-bottom: 20px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Status Popup Styles */
.status-popup {
  position: fixed;
  bottom: 20px; /* Position at the bottom */
  left: 50%;
  transform: translateX(-50%); /* Center horizontally */
  padding: 10px 20px;
  border-radius: 5px;
  color: white;
  font-size: 0.9em;
  z-index: 1001; /* Above loading overlay if both were to show, though unlikely */
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  opacity: 1;
  transition: opacity 0.5s ease-out, bottom 0.5s ease-out; /* For fade out effect */
}

.status-popup.success {
  background-color: #4CAF50; /* Green for success */
}

.status-popup.error {
  background-color: #f44336; /* Red for error */
}

/* For hiding the popup */
.status-popup.hidden {
  opacity: 0;
  bottom: -50px; /* Move it off screen when hiding */
}

.last-query-display {
  font-size: 0.9em;
  color: #555;
  font-style: italic;
  margin-top: -10px; /* Adjust to be closer to the h2 */
  margin-bottom: 15px;
}

.watch-link {
  display: inline-block; /* Or 'inline-flex' if more complex alignment needed */
  align-items: center;
  margin-top: 8px;
  padding: 0; /* Remove padding if it's just icon + text */
  background-color: transparent; /* No background */
  color: #282c34; /* Default text/icon color, same as .refresh-button */
  text-decoration: none;
  border: none; /* No border */
  border-radius: 4px; /* Optional: keep if slight rounding is desired on hover/focus */
  font-size: 0.9em; /* Adjust as needed, or inherit */
  cursor: pointer;
}

.watch-link:hover {
  background-color: transparent; /* No background on hover */
  color: #61dafb; /* Icon/text color change on hover, same as .refresh-button */
  text-decoration: underline; /* Optional: underline on hover for link affordance */
}

.more-less-button {
  background: none;
  border: none;
  color: blue;
  text-decoration: underline;
  cursor: pointer;
  padding: 0;
  margin-left: 5px;
  font-size: inherit; /* Inherit font size from parent <p> tag */
}

/* Tabs for Output */
.tabs {
  margin-bottom: 15px;
  border-bottom: 1px solid #ddd;
  padding-bottom: 5px;
  text-align: left; /* Align tabs to the left */
}

.tabs button {
  background-color: #ecf0f1;
  color: #2c3e50;
  border: 1px solid transparent;
  border-bottom: none;
  padding: 10px 15px;
  cursor: pointer;
  margin-right: 5px;
  border-radius: 5px 5px 0 0;
  font-size: 0.95em;
}

.tabs button.active {
  background-color: white;
  border-color: #ddd;
  border-bottom-color: white; /* Makes it look like tab is part of content area */
  font-weight: bold;
}

.tabs button:disabled {
  color: #95a5a6;
  background-color: #f4f7f6;
  cursor: not-allowed;
}

.thinking-output-container {
  max-height: 300px; /* Adjust as needed */
  overflow-y: auto;
  background-color: #2c3e50; /* Dark background for pre */
  color: #ecf0f1; /* Light text */
  padding: 10px;
  border-radius: 5px;
  margin-top: 10px;
  text-align: left;
  border: 1px solid #34495e; /* Added a border */
}

.thinking-output {
  white-space: pre-wrap;   /* CSS3 */
  white-space: -moz-pre-wrap; /* Firefox */
  white-space: -pre-wrap;     /* Opera <7 */
  white-space: -o-pre-wrap;   /* Opera 7 */
  word-wrap: break-word;      /* IE */
  margin: 0;
  font-family: monospace;
  font-size: 0.9em;
}
